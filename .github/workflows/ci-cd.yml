name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build with Maven
      - name: Build with Maven
        run: mvn clean install

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Google Artifact Registry
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker to use Artifact Registry
        run: |
          gcloud auth configure-docker asia-southeast2-docker.pkg.dev

      # Build and push Docker images
      - name: Build and push order-service
        run: |
          docker build -t asia-southeast2-docker.pkg.dev/multiwarehouse-446912/com-multiwarehouse-app-repository/order.service:${{ github.sha }}
          docker push asia-southeast2-docker.pkg.dev/multiwarehouse-446912/com-multiwarehouse-app-repository/order.service:${{ github.sha }}

      - name: Build and push warehouse-service
        run: |
          docker build -t asia-southeast2-docker.pkg.dev/multiwarehouse-446912/com-multiwarehouse-app-repository/warehouse.service:${{ github.sha }}
          docker push asia-southeast2-docker.pkg.dev/multiwarehouse-446912/com-multiwarehouse-app-repository/warehouse.service:${{ github.sha }}

      # Repeat for other services: user-service, product-service
      - name: Build and push user-service
        run: |
          docker build -t asia-southeast2-docker.pkg.dev/multiwarehouse-446912/com-multiwarehouse-app-repository/user.service:${{ github.sha }}
          docker push asia-southeast2-docker.pkg.dev/multiwarehouse-446912/com-multiwarehouse-app-repository/user.service:${{ github.sha }}

      - name: Build and push product-service
        run: |
          docker build -t asia-southeast2-docker.pkg.dev/multiwarehouse-446912/com-multiwarehouse-app-repository/product.service:${{ github.sha }}
          docker push asia-southeast2-docker.pkg.dev/multiwarehouse-446912/com-multiwarehouse-app-repository/product.service:${{ github.sha }}

    outputs:
      image-sha: ${{ github.sha }}

#  deploy:
#    name: Deploy to GKE
#    needs: build
#    runs-on: ubuntu-latest
#
#    steps:
#      # Checkout code
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      # Authenticate to Google Cloud
#      - name: Authenticate to Google Cloud
#        uses: google-github-actions/auth@v1
#        with:
#          credentials_json: ${{ secrets.GCP_SA_KEY }}
#
#      # Set up Gcloud SDK
#      - name: Set up Gcloud SDK
#        uses: google-github-actions/setup-gcloud@v1
#        with:
#          project_id: ${{ secrets.GCP_PROJECT_ID }}
#          install_components: 'kubectl'
#
#      # Get credentials for GKE
#      - name: Get GKE Credentials
#        run: |
#          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} \
#            --region ${{ secrets.GCP_REGION }} \
#            --project ${{ secrets.GCP_PROJECT_ID }}
#
#      # Update Kubernetes manifests with new image tags
#      - name: Update Kubernetes manifests
#        run: |
#          sed -i 's|asia-southeast2-docker.pkg.dev/multiwarehouse-446912/com-multiwarehouse-app-repository/order.service:.*|asia-southeast2-docker.pkg.dev/multiwarehouse-446912/com-multiwarehouse-app-repository/order.service:${{ needs.build.outputs.image-sha }}|' kubernetes/application-deployment.yml
#          sed -i 's|asia-southeast2-docker.pkg.dev/multiwarehouse-446912/com-multiwarehouse-app-repository/warehouse.service:.*|asia-southeast2-docker.pkg.dev/multiwarehouse-446912/com-multiwarehouse-app-repository/warehouse.service:${{ needs.build.outputs.image-sha }}|' kubernetes/application-deployment.yml
#          sed -i 's|asia-southeast2-docker.pkg.dev/multiwarehouse-446912/com-multiwarehouse-app-repository/user.service:.*|asia-southeast2-docker.pkg.dev/multiwarehouse-446912/com-multiwarehouse-app-repository/user.service:${{ needs.build.outputs.image-sha }}|' kubernetes/application-deployment.yml
#          sed -i 's|asia-southeast2-docker.pkg.dev/multiwarehouse-446912/com-multiwarehouse-app-repository/product.service:.*|asia-southeast2-docker.pkg.dev/multiwarehouse-446912/com-multiwarehouse-app-repository/product.service:${{ needs.build.outputs.image-sha }}|' kubernetes/application-deployment.yml
#
#      # Apply Kubernetes manifests
#      - name: Deploy to GKE
#        run: |
#          helm upgrade --install gke-confluent-kafka ../cp-helm-charts
#          kubectl apply -f kafka-client.yml
#          kubectl cp create-topics.sh kafka-client:/kafka-client-storage
#          kubectl exec kafka-client -- sh /kafka-client-storage/create-topics.sh gke-confluent-kafka-cp-zookeeper-headless
#          kubectl apply -f kubernetes/application-deployment.yml
